<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>StockSharp.Algo.History</name>
  </assembly>
  <members>
    <member name="T:StockSharp.Algo.History.BaseHistorySource">
      <summary>Базовый источник маркет-данных.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.BaseHistorySource.#ctor">
      <summary>Инициализировать <see cref="T:StockSharp.Algo.History.BaseHistorySource" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.BaseHistorySource.SecurityIdGenerator">
      <summary>Генератор идентификаторов инструментов.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.BaseHistorySource.GetSecurityCode(StockSharp.BusinessEntities.Security)">
      <summary>Получить код инструмента по его идентификатору.</summary>
      <param name="security">Инструмент стакана.</param>
      <returns>Код инструмента.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.BaseDumpableHistorySource">
      <summary>Базовый источник маркет-данных, который сохраняет скачанные данные во временную директорию.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.BaseDumpableHistorySource.NativeIdStorage">
      <summary>Хранилище системных идентификатор инструментов.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.BaseDumpableHistorySource.ExchangeInfoProvider">
      <summary>Провайдер бирж и торговых площадок.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.BaseDumpableHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Инициализировать <see cref="T:StockSharp.Algo.History.BaseDumpableHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.BaseDumpableHistorySource.CanDump">
      <summary>Можно ли сохранять файлы.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.BaseDumpableHistorySource.Process(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object,System.Func{System.String})">
      <summary>Загрузить или скачать текстовый файл.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <param name="download">Загрузчик.</param>
      <returns>Текстовый файл.</returns>
    </member>
    <member name="P:StockSharp.Algo.History.BaseDumpableHistorySource.DumpFolder">
      <summary>Путь к директории, куда будут сохранятся скачанные файлы.</summary>
      <remarks>Если значение равно пустой строке, то данные не сохраняются локально.</remarks>
    </member>
    <member name="M:StockSharp.Algo.History.BaseDumpableHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.BaseDumpableHistorySource.GetSecurityBoard(StockSharp.BusinessEntities.Security)">
      <summary>Получить площадку инструмента по его идентификатору.</summary>
      <param name="security">Инструмент стакана.</param>
      <returns>Площадка инструмента.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.FinVizHistorySource">
      <summary>Источник исторических маркет-данных от FinViz.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.FinVizHistorySource.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.FinVizHistorySource" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.FinVizHistorySource.ExchangeInfoProvider">
      <summary>Провайдер бирж и торговых площадок.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.FinVizHistorySource.LoadChanges(System.Collections.Generic.IEnumerable{StockSharp.BusinessEntities.Security})">
      <summary>Загрузить изменения маркет-данных.</summary>
      <param name="securities">Инструменты.</param>
      <returns>Изменения маркет-данных.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.FinVizHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.DukasCopyHistorySource">
      <summary>Источник для скачивания исторических данных с DukasCopy.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.DukasCopyHistorySource.TimeFrames">
      <summary>Доступные тайм-фреймы исторических данных.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.DukasCopyHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.LoadTicks(StockSharp.BusinessEntities.Security,System.DateTime)">
      <summary>Скачать исторические тиковые данные за весь день.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="date">Время, указываемое с точностью до дня.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.LoadTickMessages(StockSharp.BusinessEntities.Security,System.DateTime)">
      <summary>Скачать исторические тиковые данные за весь день.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="date">Время, указываемое с точностью до дня.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.LoadCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,StockSharp.Messages.Level1Fields)">
      <summary>Скачать исторические тайм-фрейм свечи.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.Forex.DukasCopyHistorySource.TimeFrames" />.</param>
      <param name="date">Дата.</param>
      <param name="field">Тип котировки (<see cref="F:StockSharp.Messages.Level1Fields.BestBidPrice" /> or <see cref="F:StockSharp.Messages.Level1Fields.BestAskPrice" />).</param>
      <returns>Исторические тайм-фрейм свечи.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.DukasCopyHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.FxcmHistorySource">
      <summary>Источник для скачивания исторических данных с FXCM.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.FxcmHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.FxcmHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.FxcmHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Algo.History.Forex.FxcmHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Algo.History.Forex.FxcmHistorySource.LoadTicks(StockSharp.BusinessEntities.Security,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="date">Дата.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.FxcmHistorySource.LoadTickMessages(StockSharp.Messages.SecurityId,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="date">Дата.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.GainCapitalHistorySource">
      <summary>Источник для скачивания исторических данных с Gain Capital.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.GainCapitalHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.GainCapitalHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.GainCapitalHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.GainCapitalHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.GainCapitalHistorySource.LoadTicks(StockSharp.BusinessEntities.Security,System.DateTime)">
      <summary>Скачать исторические котировки.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="date">Дата.</param>
      <returns>Исторические котировки.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.GainCapitalHistorySource.LoadTickMessages(StockSharp.Messages.SecurityId,System.DateTime)">
      <summary>Скачать исторические котировки.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="date">Дата.</param>
      <returns>Исторические котировки.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.MBTradingHistorySource">
      <summary>Источник для скачивания исторических данных с MBTrading.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.MBTradingHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.MBTradingHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.MBTradingHistorySource.Login">
      <summary>Логин.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.MBTradingHistorySource.Password">
      <summary>Пароль.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.MBTradingHistorySource.Pin">
      <summary>Пин.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.MBTradingHistorySource.MaxAttempt">
      <summary>Максимальное количество попыток залогиниться на сайте. По умолчанию равно 10.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.MBTradingHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.MBTradingHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.MBTradingHistorySource.LoadTicks(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Скачивать с даты.</param>
      <param name="to">Скачивать до даты.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.MBTradingHistorySource.LoadTickMessages(StockSharp.Messages.SecurityId,System.DateTime,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="from">Скачивать с даты.</param>
      <param name="to">Скачивать до даты.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.TrueFXHistorySource">
      <summary>Источник для скачивания исторических данных с TrueFX.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.TrueFXHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.TrueFXHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.TrueFXHistorySource.Login">
      <summary>Логин.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Forex.TrueFXHistorySource.Password">
      <summary>Пароль.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.TrueFXHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.TrueFXHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.TrueFXHistorySource.LoadTicks(StockSharp.BusinessEntities.Security,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="date">Дата.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.TrueFXHistorySource.LoadTickMessages(StockSharp.Messages.SecurityId,System.DateTime)">
      <summary>Загрузить исторические тиковые данные.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="date">Дата.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Forex.OandaHistorySource">
      <summary>Источник исторических маркет-данных от Oanda.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.OandaHistorySource.#ctor">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Forex.OandaHistorySource" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.OandaHistorySource.LoadRates(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime)">
      <summary>Получить исторический курс валютной пары.</summary>
      <param name="security">Валютная пара.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <returns>Исторический курс.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Forex.OandaHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.History.GoogleHistorySource">
      <summary>Источник маркет-данных от Google Finance.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.GoogleHistorySource.#ctor">
      <summary>Создать <see cref="T:StockSharp.Algo.History.GoogleHistorySource" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.GoogleHistorySource.TimeFrames">
      <summary>Тайм-фреймы, которые можно передать в <see cref="M:StockSharp.Algo.History.GoogleHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.GoogleHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Скачать свечи с сайта.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.GoogleHistorySource.TimeFrames" />.</param>
      <param name="beginDate">Начальная дата.</param>
      <param name="endDate">Дата окончания.</param>
      <returns>Свечек.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage">
      <summary>Удаленное хранилище расширенной информации.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.StorageName">
      <summary>Имя хранилища.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.Securities">
      <summary>Получить все идентификаторы инструментов.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.Fields">
      <summary>Получить расширенные поля инструмента (имена и типы).</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.GetSecurityStorage(StockSharp.Messages.SecurityId)">
      <summary>Получить удаленное хранилище расширенной информации.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <returns>Удаленное хранилище расширенной информации инструмента.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.GetAllExtendedInfo">
      <summary>Получить расширенную информацию инструмента.</summary>
      <returns>Расширенная информация.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteExtendedStorage.CreateSecurityExtendedFields(System.Tuple{System.String,System.Type}[])">
      <summary>Создать хранилище расширенной информации.</summary>
      <param name="fields">Расширенные поля (имена и типы).</param>
    </member>
    <member name="T:StockSharp.Algo.History.Hydra.IRemoteStorage">
      <summary>Интерфейс, описывающий внешнее хранилище маркет-данных, доступ к которому организован через сетевое соединение WCF (подробнее, <see cref="N:System.ServiceModel" />).</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.LookupSecurityIds(System.Guid,StockSharp.BusinessEntities.Security)">
      <summary>Найти идентификаторы инструментов, соответствующие фильтру <paramref name="criteria" />.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра. Если значение равно <see langword="null" />, то идет поиск всех имеющихся инструментов.</param>
      <returns>Найденные идентификаторы инструментов.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.LookupExchanges(System.Guid,StockSharp.BusinessEntities.Exchange)">
      <summary>Найти биржевые коды, совпадающие фильтру <paramref name="criteria" />.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="criteria">Биржа, чьи поля будут использоваться как фильтр. Если значение равно <see langword="null" />, тогда будет запрашиваться все биржи.</param>
      <returns>Найденные коды.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.LookupExchangeBoards(System.Guid,StockSharp.BusinessEntities.ExchangeBoard)">
      <summary>Найти коды площадок, совпадающие фильтру <paramref name="criteria" />.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="criteria">Биржевая площадка, чьи поля будут использоваться как фильтр. Если значение равно <see langword="null" />, тогда будет запрашиваться все биржевые площадки.</param>
      <returns>Найденные коды.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurities(System.Guid,System.String[])">
      <summary>Получить инструменты.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityIds">Идентификаторы инструментов.</param>
      <returns>Инструменты.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetExchanges(System.Guid,System.String[])">
      <summary>Получить биржи.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="codes">Коды бирж.</param>
      <returns>Биржи.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetExchangeBoards(System.Guid,System.String[])">
      <summary>Получить биржевые площадки.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="codes">Коды площадок.</param>
      <returns>Биржевые площадки.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.SaveSecurities(System.Guid,StockSharp.BusinessEntities.Security[])">
      <summary>Сохранить инструменты.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securities">Инструменты.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.SaveExchanges(System.Guid,StockSharp.BusinessEntities.Exchange[])">
      <summary>Сохранить биржи.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="exchanges">Биржи.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.SaveExchangeBoards(System.Guid,StockSharp.BusinessEntities.ExchangeBoard[])">
      <summary>Сохранить биржевые площадки.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="boards">Биржевые площадки.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteSecurities(System.Guid,System.String[])">
      <summary>Удалить инструменты.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityIds">Идентификаторы инструментов.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteExchanges(System.Guid,System.String[])">
      <summary>Удаление бирж.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="codes">Коды бирж.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteExchangeBoards(System.Guid,System.String[])">
      <summary>Удалить биржевые площадки.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="codes">Коды биржевых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurityExtendedStorages(System.Guid)">
      <summary>Получить все имена хранилищ расширенной информации инструментов.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <returns>Имена хранилищ.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurityExtendedFields(System.Guid,System.String)">
      <summary>Получить расширенные поля инструмента (имена и типы).</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <returns>Расширенные поля (имена и типы).</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetExtendedInfoSecurities(System.Guid,System.String)">
      <summary>Получить расширенные поля инструмента (имена и типы).</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <returns>Идентификаторы инструментов.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurityExtendedInfo(System.Guid,System.String,System.String)">
      <summary>Получить расширенную информацию инструмента.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <returns>Расширенная информация.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetAllExtendedInfo(System.Guid,System.String)">
      <summary>Получить расширенную информацию инструмента.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <returns>Расширенная информация.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.CreateSecurityExtendedFields(System.Guid,System.String,System.Tuple{System.String,System.String}[])">
      <summary>Создать хранилище расширенной информации.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <param name="fields">Расширенные поля (имена и типы).</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteSecurityExtendedFields(System.Guid,System.String)">
      <summary>Удалить хранилище расширенной информации.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.AddSecurityExtendedInfo(System.Guid,System.String,System.String,System.String[])">
      <summary>Добавить расширенную информацию.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="fieldValues">Расширенная информация.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteSecurityExtendedInfo(System.Guid,System.String,System.String)">
      <summary>Удалить расширенную информацию.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="storageName">Имя хранилища.</param>
      <param name="securityId">Идентификатор инструмента.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetUsers(System.Guid)">
      <summary>Получение пользователей.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <returns>Пользователи.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.SaveUser(System.Guid,System.String,System.String,System.String[],StockSharp.Algo.UserPermissions)">
      <summary>Сохранить информацию о пользователе.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="login">Логин.</param>
      <param name="password">Пароль.</param>
      <param name="ipAddresses">Список IP адресов.</param>
      <param name="permissions">Разрешения.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.DeleteUser(System.Guid,System.String)">
      <summary>Удалить существующего пользователя.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="login">Логин.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.Restart(System.Guid)">
      <summary>Перезапустить сервер.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.StartDownloading(System.Guid)">
      <summary>Запустить загрузку.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <returns>
        <see langword="true" />, если загрузка была запущена, иначе, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.StopDownloading(System.Guid)">
      <summary>Остановить загрузку.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetDates(System.Guid,System.String,System.String,System.String,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Получить все даты, для которых записаны маркет-данные.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="format">Тип формата.</param>
      <returns>Диапазон доступных дат.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetAvailableSecurities(System.Guid)">
      <summary>Получить все доступные инструменты.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <returns>Типы данных.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetAvailableDataTypes(System.Guid,System.String,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Получить все доступные типы данных.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="format">Тип формата.</param>
      <returns>Типы данных.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.Save(System.Guid,System.String,System.String,System.String,System.DateTime,StockSharp.Algo.Storages.StorageFormats,System.Byte[])">
      <summary>Сохранить маркет-данные в формате хранилища StockSharp.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="date">Дата, для которой необходимо сохранить маркет-данные.</param>
      <param name="format">Тип формата.</param>
      <param name="data">Маркет-данные в формате хранилища StockSharp.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.Delete(System.Guid,System.String,System.String,System.String,System.DateTime,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Удалить маркет-данные из хранилища за указанную дату.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="date">Дата, для которой необходимо удалить маркет-данные.</param>
      <param name="format">Тип формата.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.IRemoteStorage.LoadStream(System.Guid,System.String,System.String,System.String,System.DateTime,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Загрузить маркет-данные в формате хранилища StockSharp.</summary>
      <param name="sessionId">Идентификатор сессии.</param>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="date">Дата, для которой необходимо загрузить маркет-данные.</param>
      <param name="format">Тип формата.</param>
      <returns>Маркет-данные в формате хранилища StockSharp. Если данных не существует, то будет возвращено <see cref="F:System.IO.Stream.Null" />.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Hydra.ISecurityRemoteExtendedStorage">
      <summary>Удаленное хранилище расширенной информации инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.ISecurityRemoteExtendedStorage.SecurityId">
      <summary>Идентификатор инструмента.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.ISecurityRemoteExtendedStorage.AddSecurityExtendedInfo(System.Object[])">
      <summary>Добавить расширенную информацию.</summary>
      <param name="fieldValues">Расширенная информация.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.ISecurityRemoteExtendedStorage.DeleteSecurityExtendedInfo">
      <summary>Удалить расширенную информацию.</summary>
    </member>
    <member name="T:StockSharp.Algo.History.Hydra.RemoteStorage">
      <summary>Внешнее хранилище маркет-данных, доступ к которому организован через сетевое соединение WCF (подробнее, <see cref="N:System.ServiceModel" />).</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorage.#ctor(StockSharp.Algo.Storages.IStorageRegistry,StockSharp.Algo.Storages.ISecurityStorage,StockSharp.Algo.Storages.IExtendedInfoStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Инициализировать <see cref="T:StockSharp.Algo.History.Hydra.RemoteStorage" />.</summary>
      <param name="storageRegistry">Хранилище маркет-данных.</param>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="extendedInfoStorage">Хранилище расширенной информации <see cref="P:StockSharp.Messages.Message.ExtensionInfo" />.</param>
      <param name="exchangeInfoProvider">Провайдер биржевых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.StorageRegistry">
      <summary>Хранилище маркет-данных.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.SecurityStorage">
      <summary>Хранилище информации об инструментах.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.ExtendedInfoStorage">
      <summary>Хранилище расширенной информации <see cref="P:StockSharp.Messages.Message.ExtensionInfo" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.ExchangeInfoProvider">
      <summary>Провайдер биржевых площадок.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.Authorization">
      <summary>Модуль проверки доступа.</summary>
    </member>
    <member name="F:StockSharp.Algo.History.Hydra.RemoteStorage.DefaultMaxSecurityCount">
      <summary>Максимальное количество инструментов, которое можно запрашивать с сервера через метод <see cref="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurities(System.Guid,System.String[])" />. Равно 200.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorage.MaxSecurityCount">
      <summary>Максимальное количество инструментов, которое можно запрашивать с сервера через метод <see cref="M:StockSharp.Algo.History.Hydra.IRemoteStorage.GetSecurities(System.Guid,System.String[])" />. По умолчанию равно <see cref="F:StockSharp.Algo.History.Hydra.RemoteStorage.DefaultMaxSecurityCount" />.</summary>
    </member>
    <member name="E:StockSharp.Algo.History.Hydra.RemoteStorage.Restarting">
      <summary>Событие перезапуска сервера.</summary>
    </member>
    <member name="E:StockSharp.Algo.History.Hydra.RemoteStorage.StartDownloading">
      <summary>Событие запуска загрузки.</summary>
    </member>
    <member name="E:StockSharp.Algo.History.Hydra.RemoteStorage.StopDownloading">
      <summary>Событие остановки загрузки.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorage.AddDataType(System.Type)">
      <summary>Добавить тип данных, который сможет передавать <see cref="T:StockSharp.Algo.History.Hydra.RemoteStorage" />.</summary>
      <param name="dataType">Типы данных.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorage.GetDrives">
      <summary>Получить список доступных хранилищ маркет-данных.</summary>
      <returns>Хранилища маркет-данных.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Hydra.RemoteStorageClient">
      <summary>Клиент для доступа к серверу истории <see cref="T:StockSharp.Algo.History.Hydra.IRemoteStorage" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Hydra.RemoteStorageClient" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider,System.Uri,System.Boolean)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Hydra.RemoteStorageClient" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
      <param name="address">Адрес сервера.</param>
      <param name="streaming">Передача данных через WCF Streaming.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorageClient.ExchangeInfoProvider">
      <summary>Провайдер бирж и торговых площадок.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorageClient.Credentials">
      <summary>Информация о логине и пароле для доступа к удаленному хранилищу.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorageClient.SessionId">
      <summary>Идентификатор сессии, полученный из <see cref="M:StockSharp.Community.IAuthenticationService.Login(System.String,System.String)" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorageClient.SecurityBatchSize">
      <summary>Размер блока запроса новых инструментов. По умолчанию он не превышает 1000 элементов.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Hydra.RemoteStorageClient.AvailableSecurities">
      <summary>Получить все доступные инструменты.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.CreateChannel">
      <summary>Создать WCF канал.</summary>
      <returns>WCF канал.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.LoadExchanges(StockSharp.BusinessEntities.Exchange)">
      <summary>Найти биржи, совпадающие фильтру <paramref name="criteria" />.</summary>
      <param name="criteria">Биржа, чьи поля будут использоваться как фильтр. Если значение равно <see langword="null" />, тогда будет запрашиваться все биржи.</param>
      <returns>Биржи.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.LoadExchangeBoards(StockSharp.BusinessEntities.ExchangeBoard)">
      <summary>Найти биржевые площадки, совпадающие фильтру <paramref name="criteria" />.</summary>
      <param name="criteria">Биржевая площадка, чьи поля будут использоваться как фильтр. Если значение равно <see langword="null" />, тогда будет запрашиваться все биржевые площадки.</param>
      <returns>Биржевые площадки.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.SaveSecurities(StockSharp.BusinessEntities.Security[])">
      <summary>Сохранить инструменты.</summary>
      <param name="securities">Инструменты.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.DeleteSecurities(StockSharp.BusinessEntities.Security[])">
      <summary>Удалить инструменты.</summary>
      <param name="securities">Инструменты.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.SaveExchanges(StockSharp.BusinessEntities.Exchange[])">
      <summary>Сохранить биржи.</summary>
      <param name="exchanges">Биржи.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.DeleteExchanges(StockSharp.BusinessEntities.Exchange[])">
      <summary>Удаление бирж.</summary>
      <param name="exchanges">Биржи.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.SaveExchangeBoards(StockSharp.BusinessEntities.ExchangeBoard[])">
      <summary>Сохранить биржевые площадки.</summary>
      <param name="boards">Площадки.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.DeleteExchangeBoards(StockSharp.BusinessEntities.ExchangeBoard[])">
      <summary>Удалить биржевые площадки.</summary>
      <param name="boards">Площадки.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.GetSecurityExtendedStorages">
      <summary>Получить все имена хранилищ расширенной информации инструментов.</summary>
      <returns>Имена хранилищ.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.GetExtendedStorage(System.String)">
      <summary>Получить хранилище расширенной информации.</summary>
      <param name="storageName">Имя хранилища.</param>
      <returns>Хранилище расширенной информации.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.GetUsers">
      <summary>Получение пользователей.</summary>
      <returns>Информация о пользователях.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.SaveUser(System.String,System.Security.SecureString,System.Net.IPAddress[],StockSharp.Algo.UserPermissions)">
      <summary>Сохранить информацию о пользователе.</summary>
      <param name="login">Логин.</param>
      <param name="password">Пароль.</param>
      <param name="ipAddresses">Список IP адресов.</param>
      <param name="permissions">Разрешения.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.DeleteUser(System.String)">
      <summary>Удалить существующего пользователя.</summary>
      <param name="login">Логин.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.Restart">
      <summary>Перезапустить сервер.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.StartDownloading">
      <summary>Запустить загрузку.</summary>
      <returns>
        <see langword="true" />, если загрузка была запущена, иначе, <see langword="false" />.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.StopDownloading">
      <summary>Остановить загрузку.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.GetRemoteStorage(StockSharp.Messages.SecurityId,System.Type,System.Object,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Получить обертку для доступа к удаленным маркет-данным.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="format">Тип формата.</param>
      <returns>Обертка для доступа к удаленным маркет-данным.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.GetAvailableDataTypes(StockSharp.Messages.SecurityId,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Получить все доступные типы данных.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="format">Тип формата.</param>
      <returns>Типы данных.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.Login">
      <summary>Произвести вход в систему.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.Invoke``1(System.Func{StockSharp.Algo.History.Hydra.IRemoteStorage,``0})">
      <summary>Вызвать метод сервиса <see cref="T:StockSharp.Algo.History.Hydra.IRemoteStorage" />.</summary>
      <typeparam name="TResult">Тип результата, возвращающий метод сервиса.</typeparam>
      <param name="handler">Обработчик, в котором вызывается метод.</param>
      <returns>Результат, возвращающий метод сервиса.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Hydra.RemoteStorageClient.DisposeManaged">
      <summary>Освободить занятые ресурсы.</summary>
    </member>
    <member name="T:StockSharp.Algo.History.ISecurityDownloader">
      <summary>Интерфейс загрузчика информации об инструментах.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.ISecurityDownloader.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.History.QuandlHistorySource">
      <summary>Источник маркет-данных от Quandl.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.QuandlHistorySource.TimeFrames">
      <summary>Тайм-фреймы, которые можно передать в <see cref="M:StockSharp.Algo.History.QuandlHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.QuandlHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.QuandlHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.QuandlHistorySource.DatabaseCode">
      <summary>Идентификатор базы данных Quandl.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.QuandlHistorySource.AuthToken">
      <summary>Идентификатор зарегистрированного пользователя.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.QuandlHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <inheritdoc />
    </member>
    <member name="M:StockSharp.Algo.History.QuandlHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Скачать свечи с сайта.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.QuandlHistorySource.TimeFrames" />.</param>
      <param name="beginDate">Начальная дата.</param>
      <param name="endDate">Дата окончания.</param>
      <returns>Свечек.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.QuandlHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <inheritdoc />
    </member>
    <member name="T:StockSharp.Algo.History.Russian.AlorHistorySource">
      <summary>Источник для скачивания исторических сделок с Alor.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.AlorHistorySource.Address">
      <summary>Адрес сервера истории.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.AlorHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider,System.String)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.AlorHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
      <param name="address">Адрес сервера истории. По умолчанию равен http://history.alor.ru.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.AlorHistorySource.TimeFrames">
      <summary>Возможные тайм-фреймы.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.AlorHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.AlorHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime,System.Int32)">
      <summary>Загрузить свечи.</summary>
      <param name="security">Инструмент, для которого необходимо получить свечи.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.Russian.AlorHistorySource.TimeFrames" />.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <param name="count">Максимальное количество свеч, которое нужно получить (не менее 1 и не более 10000).</param>
      <returns>Загруженные свечи.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Finam.FinamHistorySource">
      <summary>Источник для скачивания исторических сделок с Finam.</summary>
    </member>
    <member name="F:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.NativeIdStorageName">
      <summary>Название хранилища системных идентификаторов.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.Finam.FinamHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.TimeFrames">
      <summary>Возможные тайм-фреймы.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.DownloadSecurityInfo">
      <summary>Загрузить информацию об инструментах.</summary>
      <returns>Информация об инструментах.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.GetTicks(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Boolean)">
      <summary>Загрузить исторические сделки.</summary>
      <param name="security">Инструмент, для которого необходимо получить все сделки.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <param name="includeOrigin">Заполнять <see cref="P:StockSharp.Messages.ExecutionMessage.OriginSide" />.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Загрузить свечи.</summary>
      <param name="security">Инструмент, для которого необходимо получить свечи.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.TimeFrames" />.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <returns>Загруженные свечи.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Finam.FinamHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo">
      <summary>Информация об инструменте, загруженная через <see cref="T:StockSharp.Algo.History.Russian.Finam.FinamHistorySource" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo.FinamSecurityId">
      <summary>Идентификатор инструмента на сайте Finam.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo.FinamMarketId">
      <summary>Идентификатор рынка на сайте Finam.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo.Code">
      <summary>Код инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo.Name">
      <summary>Имя инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Finam.FinamSecurityInfo.Decimals">
      <summary>Количество знаков после запятой.</summary>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.MfdHistorySource">
      <summary>Источник для скачивания исторических сделок с Mdf.ru.</summary>
    </member>
    <member name="F:StockSharp.Algo.History.Russian.MfdHistorySource.NativeIdStorageName">
      <summary>Название хранилища системных идентификаторов.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MfdHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.MfdHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.MfdHistorySource.TimeFrames">
      <summary>Возможные тайм-фреймы.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MfdHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MfdHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MfdHistorySource.GetTicks(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime)">
      <summary>Загрузить тиковые сделки.</summary>
      <param name="security">Инструмент, для которого необходимо получить сделки.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <returns>Загруженные сделки.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MfdHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Загрузить свечи.</summary>
      <param name="security">Инструмент, для которого необходимо получить свечи.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.Russian.MfdHistorySource.TimeFrames" />.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <returns>Загруженные свечи.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.MoexDownloader">
      <summary>Вспомогательный класс, заполняющий поля <see cref="P:StockSharp.BusinessEntities.Security.PriceStep" /> и <see cref="P:StockSharp.BusinessEntities.Security.VolumeStep" /> на основе информации с сайта https://moex.com.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.MoexDownloader.GetSecurities(System.String,System.Nullable{StockSharp.Messages.SecurityTypes},System.Boolean)">
      <summary>Получить все инструменты для переданного кода.</summary>
      <param name="code">Код инструмента.</param>
      <param name="type">Тип инструмента.</param>
      <param name="isDownload">Скачивать ли информацию с сайта, если она не была найдена локально.</param>
      <returns>Найденные инструменты.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Rts.Competition">
      <summary>Класс для получения данных к итогам конкурса ЛЧИ.</summary>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Rts.Competition.CompetitionYear">
      <summary>Итог конкурса ЛЧИ за определенный год.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.Competition.CompetitionYear.Year">
      <summary>Год проведения ЛЧИ.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.Competition.CompetitionYear.Members">
      <summary>Участники соревнования.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.Competition.CompetitionYear.Days">
      <summary>Даты, для которых есть информация о сделках.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.Competition.CompetitionYear.GetTrades(StockSharp.Algo.Storages.ISecurityStorage,System.String,System.DateTime)">
      <summary>Получить сделки участника за определенную дату.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="member">Участник.</param>
      <param name="date">Дата соревнования.</param>
      <returns>Сделки участника.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.Competition.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.Rts.Competition" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.Competition.AllYears">
      <summary>Все года, когда проводился конкурс.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.Competition.Get(System.DateTime)">
      <summary>Получить итоги за определенный год.</summary>
      <param name="year">Год конкурса.</param>
      <returns>Итоги.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Rts.FortsDailyData">
      <summary>Класс для доступа с историческим дневным данным рынка FORTS.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.FortsDailyData.GetSecurityYesterdayEndOfDay(StockSharp.Messages.SecurityId,System.String)">
      <summary>Возвращает вчерашние данные на конец дня (EOD, End-Of-Day) по выбранному инструменту.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="securityName">Имя инструмента.</param>
      <returns>Вчерашние данные.</returns>
      <remarks>Дата определяется на основе системного времени.</remarks>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.FortsDailyData.GetSecurityEndOfDay(StockSharp.Messages.SecurityId,System.String,System.DateTime,System.DateTime)">
      <summary>Возвращает список данных на конец дня (EOD, End-Of-Day) по выбранному инструменту за выбранный период.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="securityName">Имя инструмента.</param>
      <param name="fromDate">Дата начала периода.</param>
      <param name="toDate">Дата окончания периода.</param>
      <returns>Исторические данные.</returns>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.FortsDailyData.UsdRateMinAvailableTime">
      <summary>Самая ранняя дата, для которой есть индикативный курс доллара США к российскому рублю. Равна 2 ноября 2009 года.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.FortsDailyData.GetRate(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime)">
      <summary>Получить индикативный курс валютной пары.</summary>
      <param name="security">Валютная пара.</param>
      <param name="fromDate">Дата начала периода.</param>
      <param name="toDate">Дата окончания периода.</param>
      <returns>Индикативный курс доллара США к российскому рублю.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.Rts.RtsHistorySource">
      <summary>Источник для скачивания исторических сделок с RTS.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.Rts.RtsHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.TimeZone">
      <summary>Временная зона маркет-данных.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.Host">
      <summary>Адрес ftp RTS сервера.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.UserName">
      <summary>Логин к ftp.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.Password">
      <summary>Пароль к ftp.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.ExchangeBoard">
      <summary>Информация о площадке.</summary>
    </member>
    <member name="F:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.RtsMinAvaliableTime">
      <summary>Самая ранняя дата RTS, для которой есть исторические данные.</summary>
    </member>
    <member name="F:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.UxMinAvaliableTime">
      <summary>Самая ранняя дата UX, для которой есть исторические данные.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.DbfDirectory">
      <summary>Путь к папке с историческими данными в формате DBF.</summary>
      <remarks>Если значение равно пустой строке, то данные в формате DBF не обрабатываются.</remarks>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.TxtDirectory">
      <summary>Путь к папке с историческими данными в формате CSV и Excel.</summary>
      <remarks>Если значение равно пустой строке, то данные в формате CSV и Excel не обрабатываются.</remarks>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.SaveRtsStdTrades">
      <summary>Сохранять сделки для инструментов РТС Стандарт. По умолчанию выключено.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.SaveRtsStdCombinedOnly">
      <summary>Склеивать сделки для инструментов РТС Стандарт (сделки для T+N не разбиваются по папкам). По умолчанию выключено.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.IsSystemOnly">
      <summary>Сохранять только системные сделки. По умолчанию включено.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.LoadEveningSession">
      <summary>Скачивать данные вечерней сессии.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.Rts.RtsHistorySource.LoadTicks(StockSharp.Algo.Storages.ISecurityStorage,System.DateTime)">
      <summary>Загрузить исторические сделки.</summary>
      <param name="storage">Хранилище информации об инструментах.</param>
      <param name="date">Дата торговой сессии, для которой необходимо получить сделки.</param>
      <returns>Исторические тиковые данные.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.SecurityInfo">
      <summary>Информация об инструменте.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Name">
      <summary>Имя инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.ShortName">
      <summary>Короткое название инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Code">
      <summary>Код инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Board">
      <summary>Биржевая площадка, на которой торгуется инструмент.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Isin">
      <summary>Идентификатор в формате ISIN (International Securities Identification Number).</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Asset">
      <summary>Базовый актив, на основе которого построен данный инструмент.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Type">
      <summary>Тип инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.IssueSize">
      <summary>Количество выпущенных контрактов.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.IssueDate">
      <summary>Дата выпуска.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.LastDate">
      <summary>Дата экспирация инструмента (для деривативов - экспирация, для облигаций - погашение).</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Decimals">
      <summary>Количество знаков в цене после запятой.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Multiplier">
      <summary>Коэффициент объема между лотом и активом.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.PriceStep">
      <summary>Минимальный шаг цены.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.Currency">
      <summary>Валюта торгового инструмента.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.SecurityInfo.SettleDate">
      <summary>Дата выплат по инструменту (для деривативов и облигаций).</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.SecurityInfo.GetSecurityType">
      <summary>Получить тип инструмента.</summary>
      <returns>Тип инструмента.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.SecurityInfo.FillTo(StockSharp.BusinessEntities.Security,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Скопировать поля текущего инструмента в <paramref name="security" />.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.SecurityInfo.Clone">
      <summary>Создать копию <see cref="T:StockSharp.Algo.History.Russian.SecurityInfo" />.</summary>
      <returns>Копия объекта.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.Russian.UxHistorySource">
      <summary>Источник для скачивания исторических данных с сайта украинской биржи.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.UxHistorySource.#ctor(StockSharp.Algo.Storages.INativeIdStorage,StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.Russian.UxHistorySource" />.</summary>
      <param name="nativeIdStorage">Хранилище системных идентификатор инструментов.</param>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.Russian.UxHistorySource.TimeFrames">
      <summary>Возможные тайм-фреймы.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.UxHistorySource.GetDumpFile(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime,System.Type,System.Object)">
      <summary>Получить полный путь к скачанному файлу.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="from">Начальная дата.</param>
      <param name="to">Дата окончания.</param>
      <param name="dataType">Типы данных.</param>
      <param name="arg">Аргумент.</param>
      <returns>Полный путь к скаченному файлу.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.UxHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.UxHistorySource.GetTicks(StockSharp.BusinessEntities.Security,System.DateTime,System.DateTime)">
      <summary>Загрузить тиковые сделки.</summary>
      <param name="security">Инструмент, для которого необходимо получить сделки.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <returns>Загруженные сделки.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.Russian.UxHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Загрузить свечи.</summary>
      <param name="security">Инструмент, для которого необходимо получить свечи.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.Russian.UxHistorySource.TimeFrames" />.</param>
      <param name="from">Дата начала периода.</param>
      <param name="to">Дата окончания периода.</param>
      <returns>Загруженные свечи.</returns>
    </member>
    <member name="T:StockSharp.Algo.History.XigniteHistorySource">
      <summary>Источник данных Xignite.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.XigniteHistorySource.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.XigniteHistorySource" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.XigniteHistorySource.ExchangeInfoProvider">
      <summary>Провайдер бирж и торговых площадок.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.XigniteHistorySource.AuthToken">
      <summary>Идентификатор зарегистрированного пользователя.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.XigniteHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Скачать свечи с сайта.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="timeFrame">Тайм-фрейм.</param>
      <param name="beginDate">Начальная дата.</param>
      <param name="endDate">Дата окончания.</param>
      <returns>Свечек.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.XigniteHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.History.YahooHistorySource">
      <summary>Источник маркет-данных от Yahoo Finance.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.YahooHistorySource.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.History.YahooHistorySource" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="P:StockSharp.Algo.History.YahooHistorySource.ExchangeInfoProvider">
      <summary>Провайдер бирж и торговых площадок.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.YahooHistorySource.Fields">
      <summary>Доступные поля маркет-данных, которые можно передать в <see cref="M:StockSharp.Algo.History.YahooHistorySource.GetLevel1(StockSharp.Messages.SecurityId,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{StockSharp.Messages.Level1Fields})" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.History.YahooHistorySource.TimeFrames">
      <summary>Тайм-фреймы, которые можно передать в <see cref="M:StockSharp.Algo.History.YahooHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.History.YahooHistorySource.GetLevel1(StockSharp.Messages.SecurityId,System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{StockSharp.Messages.Level1Fields})">
      <summary>Получить level1 маркет-данные.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="beginDate">Начальная дата.</param>
      <param name="endDate">Дата окончания.</param>
      <param name="fields">Поля маркет-данных. Если было передано <see langword="null" />, то будет использоваться значение <see cref="P:StockSharp.Algo.History.YahooHistorySource.Fields" />.</param>
      <returns>Level1 маркет-данные.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.YahooHistorySource.GetCandles(StockSharp.BusinessEntities.Security,System.TimeSpan,System.DateTime,System.DateTime)">
      <summary>Скачать свечи с сайта.</summary>
      <param name="security">Инструмент стакана.</param>
      <param name="timeFrame">Тайм-фрейм. Возможные значения <see cref="P:StockSharp.Algo.History.YahooHistorySource.TimeFrames" />.</param>
      <param name="beginDate">Начальная дата.</param>
      <param name="endDate">Дата окончания.</param>
      <returns>Свечек.</returns>
    </member>
    <member name="M:StockSharp.Algo.History.YahooHistorySource.Refresh(StockSharp.Algo.Storages.ISecurityStorage,StockSharp.BusinessEntities.Security,System.Action{StockSharp.BusinessEntities.Security},System.Func{System.Boolean})">
      <summary>Закачать новые инструменты.</summary>
      <param name="securityStorage">Хранилище информации об инструментах.</param>
      <param name="criteria">Инструмент, поля которого будут использоваться в качестве фильтра.</param>
      <param name="newSecurity">Обработчик, через который будет передан новый инструмент.</param>
      <param name="isCancelled">Обработчик, возвращающий признак отмены поиска.</param>
    </member>
    <member name="T:StockSharp.Algo.Storages.RemoteMarketDataDrive">
      <summary>Удаленное хранилище маркет-данных, работающее через <see cref="T:StockSharp.Algo.History.Hydra.RemoteStorageClient" />.</summary>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.#ctor(StockSharp.Algo.Storages.IExchangeInfoProvider)">
      <summary>Создать <see cref="T:StockSharp.Algo.Storages.RemoteMarketDataDrive" />.</summary>
      <param name="exchangeInfoProvider">Провайдер бирж и торговых площадок.</param>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.#ctor(StockSharp.Algo.History.Hydra.RemoteStorageClient)">
      <summary>Создать <see cref="T:StockSharp.Algo.Storages.RemoteMarketDataDrive" />.</summary>
      <param name="client">Клиент для доступа к серверу истории <see cref="T:StockSharp.Algo.History.Hydra.IRemoteStorage" />.</param>
    </member>
    <member name="P:StockSharp.Algo.Storages.RemoteMarketDataDrive.Client">
      <summary>Клиент для доступа к серверу истории <see cref="T:StockSharp.Algo.History.Hydra.IRemoteStorage" />.</summary>
    </member>
    <member name="P:StockSharp.Algo.Storages.RemoteMarketDataDrive.Path">
      <summary>Путь к данными.</summary>
    </member>
    <member name="P:StockSharp.Algo.Storages.RemoteMarketDataDrive.AvailableSecurities">
      <summary>Получить все доступные инструменты.</summary>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.GetAvailableDataTypes(StockSharp.Messages.SecurityId,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Получить все доступные типы данных.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="format">Тип формата.</param>
      <returns>Типы данных.</returns>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.GetStorageDrive(StockSharp.Messages.SecurityId,System.Type,System.Object,StockSharp.Algo.Storages.StorageFormats)">
      <summary>Создать хранилище для <see cref="T:StockSharp.Algo.Storages.IMarketDataStorage" />.</summary>
      <param name="securityId">Идентификатор инструмента.</param>
      <param name="dataType">Тип маркет-данных.</param>
      <param name="arg">Параметр, ассоциированный с типом <paramref name="dataType" />. Например, <see cref="P:StockSharp.Messages.CandleMessage.Arg" />.</param>
      <param name="format">Тип формата.</param>
      <returns>Хранилище для <see cref="T:StockSharp.Algo.Storages.IMarketDataStorage" />.</returns>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.Load(Ecng.Serialization.SettingsStorage)">
      <summary>Загрузить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.Save(Ecng.Serialization.SettingsStorage)">
      <summary>Сохранить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="M:StockSharp.Algo.Storages.RemoteMarketDataDrive.DisposeManaged">
      <summary>Освободить занятые ресурсы.</summary>
    </member>
  </members>
</doc>