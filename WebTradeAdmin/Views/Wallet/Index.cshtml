@using BusinessObjects

@{
                /**/

                ViewBag.Title = "Wallet";
}

<h2>Wallet</h2>

@(Html.DevExtreme().DataGrid<WalletBalance>()
                .DataSource(d => d.WebApi().Controller("WalletApi").Key("WALLET_ID").UpdateAction(true))
                .Selection(s => s.Mode(SelectionMode.Single))
                .HoverStateEnabled(true)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.NAME).Width(180).AllowEditing(false);
                    columns.AddFor(m => m.DATE).Format(Format.ShortDateShortTime).Width(200).AllowEditing(false);
                    columns.AddFor(m => m.BALANCE).Alignment(HorizontalAlignment.Right).Format(Format.Currency).Width(120).AllowEditing(true);
                    columns.AddFor(m => m.formula).Visible(false);
                })
                .Editing(e =>
                {
                    e.AllowAdding(false);
                })
                .Paging(p => p.Enabled(false))
                .Editing(editing =>
                {
                    editing.Mode(GridEditMode.Form);
                    editing.AllowUpdating(true);

                    editing.Form(c =>
                    {
                        c.Items(i =>
                        {
                            i.AddSimpleFor(m => m.BALANCE);
                            i.AddSimpleFor(m => m.formula);
                        });
                    });
                })
                .RemoteOperations(false)
                .ShowBorders(true)
                .ShowColumnLines(false)
                .ShowRowLines(true)
                .Summary(s => s.TotalItems(items =>
                {
                    items.AddFor(m => m.BALANCE)
                    .SummaryType(SummaryType.Sum)
                    .ValueFormat(Format.Currency);
                })

        )
)
<div>

</div>
<div>
</div>
<div id="chart-demo">
    @(Html.DevExtreme().Chart()
                        .ID("line-chart")
                        .Palette(VizPalette.GreenMist)
                        .DataSource(d => d.Mvc().LoadAction("GetRange"))
                        .CommonSeriesSettings(s => s
                            .ArgumentField("DATE")
                            .Type(SeriesType.Line)
                        )
                        .Margin(m => m.Bottom(20))
                        .ArgumentAxis(a => a
                            .ValueMarginsEnabled(false)
                            .Label(l => l.Visible(true))
                            .ArgumentType(ChartDataType.DateTime)
                            .Grid(g => g.Visible(true))
                        )
                        .Series(s =>
                        {
                            s.Add().ValueField("BALANCE").Name("Total");
                        })
                        .Legend(l => l
                            .VerticalAlignment(VerticalEdge.Bottom)
                            .HorizontalAlignment(HorizontalAlignment.Center)
                            .ItemTextPosition(Position.Bottom)
                        )
                        .Title(t => t
                            .Text("Capital").HorizontalAlignment(HorizontalAlignment.Left)
                            .Subtitle(s => s.Text("Capital 2018")).HorizontalAlignment(HorizontalAlignment.Left)
                        )
                        .Export(e => e.Enabled(false))
                        .Tooltip(t => t
                        .Enabled(true)
                        .CustomizeTooltip(@<text>
                            function (arg) {
                            return {
                            text: arg.valueText + '$ / ' + arg.argumentText 
                            };
                            }
                        </text>)
                            )
    )
</div>

